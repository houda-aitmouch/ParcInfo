#!/bin/bash

# Fonction pour afficher les messages d'information
print_info() {
    echo -e "\n‚ÑπÔ∏è  $1"
}

# Fonction pour afficher les messages de succ√®s
print_success() {
    echo -e "‚úÖ $1"
}

# Fonction pour afficher les messages d'erreur
print_error() {
    echo -e "‚ùå $1"
}

echo -e "\nüöÄ D√©ploiement Kubernetes - ParcInfo"
echo "====================================="

# V√©rification de kubectl
print_info "V√©rification de kubectl..."
if ! command -v kubectl &> /dev/null; then
    print_error "kubectl n'est pas install√©"
    exit 1
fi
print_success "kubectl est install√©"

# V√©rification de la connexion au cluster
print_info "V√©rification de la connexion au cluster Kubernetes..."
if kubectl cluster-info &> /dev/null; then
    print_success "Connexion au cluster Kubernetes √©tablie"
else
    print_error "Impossible de se connecter au cluster Kubernetes"
    print_info "Assurez-vous que Docker Desktop est d√©marr√© avec Kubernetes activ√©"
    print_info "Ou utilisez: minikube start"
    exit 1
fi

# V√©rification des manifests
print_info "V√©rification des manifests Kubernetes..."
if [ ! -d "k8s" ]; then
    print_error "Le dossier k8s n'existe pas"
    exit 1
fi

# Test des manifests avec dry-run
print_info "Test des manifests avec dry-run..."
if kubectl apply -k k8s/ --dry-run=client &> /dev/null; then
    print_success "Manifests Kubernetes valides"
else
    print_error "Erreur dans les manifests Kubernetes"
    kubectl apply -k k8s/ --dry-run=client
    exit 1
fi

# D√©ploiement
print_info "D√©ploiement des ressources Kubernetes..."
if kubectl apply -k k8s/; then
    print_success "Ressources Kubernetes d√©ploy√©es avec succ√®s"
else
    print_error "Erreur lors du d√©ploiement"
    exit 1
fi

# V√©rification du d√©ploiement
print_info "V√©rification du d√©ploiement..."
kubectl get pods -n parcinfo
kubectl get services -n parcinfo
kubectl get ingress -n parcinfo

print_success "D√©ploiement Kubernetes termin√© !"
print_info "Pour acc√©der √† l'application :"
print_info "  - Port-forward : kubectl port-forward -n parcinfo service/nginx-service 8080:80"
print_info "  - Puis ouvrir : http://localhost:8080"
