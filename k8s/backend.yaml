apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: parcinfo
  labels:
    app: backend
spec:
  type: NodePort
  ports:
  - port: 8000
    targetPort: 8000
    nodePort: 30080
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: parcinfo
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: parcinfo-backend:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
          hostPort: 8000
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: parcinfo-config
              key: DEBUG
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: parcinfo-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: parcinfo-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: parcinfo-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: parcinfo-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: parcinfo-config
              key: DB_PASSWORD
        - name: SECRET_KEY
          valueFrom:
            configMapKeyRef:
              name: parcinfo-config
              key: SECRET_KEY
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              name: parcinfo-config
              key: ALLOWED_HOSTS
        - name: CSRF_TRUSTED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: parcinfo-config
              key: CSRF_TRUSTED_ORIGINS
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        # livenessProbe:
        #   httpGet:
        #     path: /health/
        #     port: 8000
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /health/
        #     port: 8000
        #   initialDelaySeconds: 5
        #   periodSeconds: 5
