name: Chatbot ParcInfo Tests

on:
  push:
    paths:
      - 'apps/chatbot/**'
      - 'test_rag_chatbot.py'
      - 'scripts/test_chatbot_*.py'
      - '.github/workflows/chatbot-tests.yml'
  pull_request:
    paths:
      - 'apps/chatbot/**'
      - 'test_rag_chatbot.py'
      - 'scripts/test_chatbot_*.py'
      - '.github/workflows/chatbot-tests.yml'

jobs:
  test-chatbot:
    runs-on: ubuntu-latest
    
    env:
      DJANGO_SETTINGS_MODULE: ParcInfo.settings
      DB_NAME: parcinfo_test
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: 5432
      SECRET_KEY: test-secret-key-for-ci
      DEBUG: True
    
    services:
      postgres:
        image: pgvector/pgvector:pg13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: parcinfo_test
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_unified.txt
        pip install -r requirements_chatbot.txt

    - name: Set up Django environment
      run: |
        python manage.py check

    - name: Setup pgvector extension
      run: |
        PGPASSWORD=postgres psql -h localhost -U postgres -d parcinfo_test -c "CREATE EXTENSION IF NOT EXISTS vector;"

    - name: Run database migrations
      run: |
        python manage.py migrate

    - name: Create test data
      run: |
        python manage.py setup_permissions

    - name: Run chatbot tests
      run: |
        python test_rag_chatbot.py

    - name: Save test results
      if: always()
      run: |
        echo "Test completed successfully"
        if [ -f test_report_*.json ]; then
          echo "Test reports found:"
          ls -la test_report_*.json
          cat test_report_*.json | head -20
        else
          echo "No test reports generated"
        fi
