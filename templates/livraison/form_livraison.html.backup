{% load static %}
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nouvelle livraison - Gestion des Livraisons</title>
    <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Inter', sans-serif; }
        
        .form-section {
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
            border: 1px solid #e2e8f0;
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }
        
        .form-section h3 {
            color: #1e293b;
            font-weight: 600;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #3b82f6;
        }
        
        .form-control {
            transition: all 0.2s ease-in-out;
            border: 2px solid #e2e8f0;
        }
        
        .form-control:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
        
        .form-control:read-only {
            background-color: #f8fafc;
            color: #475569;
            cursor: not-allowed;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
            border: none;
            transition: all 0.2s ease-in-out;
        }
        
        .btn-primary:hover {
            background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
        }
        
        .btn-secondary {
            background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%);
            border: none;
            transition: all 0.2s ease-in-out;
        }
        
        .btn-secondary:hover {
            background: linear-gradient(135deg, #4b5563 0%, #374151 100%);
            transform: translateY(-1px);
        }
        
        .materiel-card {
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            padding: 1rem;
            transition: all 0.2s ease-in-out;
        }
        
        .materiel-card:hover {
            border-color: #3b82f6;
            box-shadow: 0 2px 8px rgba(59, 130, 246, 0.1);
        }
        
        .checkbox-custom {
            width: 1.25rem;
            height: 1.25rem;
            border: 2px solid #d1d5db;
            border-radius: 4px;
            transition: all 0.2s ease-in-out;
        }
        
        .checkbox-custom:checked {
            background-color: #3b82f6;
            border-color: #3b82f6;
        }
    </style>  <link rel="stylesheet" href="{% static 'css/parcinfo-ui.css' %}">
  <link rel="stylesheet" href="{% static 'react/assets/index.css' %}">
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Navigation -->
    <nav class="bg-white shadow-lg border-b border-gray-200">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center space-x-4">
                    <img src="{% static 'images/ADD.png' %}" alt="ADD Logo" class="h-10 w-auto">
                    <div class="hidden md:block">
                    </div>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="{% url 'users:profil' %}" class="text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200">Mon profil</a>
                    <a href="{% url 'logout' %}" class="text-red-600 hover:text-red-800 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200">Se déconnecter</a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Contenu principal -->
    <div class="container mx-auto px-4 py-8">
        <div class="max-w-4xl mx-auto">
            <!-- Header -->
            <div class="mb-8">
                <div class="flex items-center justify-between">
                    <h1 class="text-3xl font-bold text-gray-900">
                        {% if is_edit %}
                            Modifier la livraison {{ livraison.numero_commande }}
                        {% else %}
                            Nouvelle livraison
                        {% endif %}
                    </h1>
                    <a href="{% url 'livraison:liste_livraisons' %}" 
                       class="inline-flex items-center gap-2 bg-gray-600 hover:bg-gray-700 text-white font-semibold py-3 px-6 rounded-xl shadow-lg transition-all duration-200">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                        </svg>
                        Retour à la liste
                    </a>
                </div>
            </div>

            <!-- Formulaire -->
            <div class="bg-white rounded-xl shadow-lg p-8" x-data="livraisonForm()">
                <!-- Messages d'erreur -->
                {% if messages %}
                    <div class="mb-6">
                        {% for message in messages %}
                            <div class="p-4 rounded-lg {% if message.tags == 'error' %}bg-red-100 border border-red-400 text-red-700{% else %}bg-green-100 border border-green-400 text-green-700{% endif %}">
                                {{ message }}
                            </div>
                        {% endfor %}
                    </div>
                {% endif %}
                
                <form method="post" class="space-y-8">
                    {% csrf_token %}
                    
                    <!-- Section 1: Sélection de la commande -->
                    <div class="form-section">
                        <h3 class="flex items-center gap-2">
                            <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                            {% if is_edit %}
                                Informations de la commande
                            {% else %}
                                Sélection de la commande
                            {% endif %}
                        </h3>
                        
                        {% if is_edit %}
                            <!-- Mode édition : affichage en lecture seule -->
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">
                                        Type de commande
                                    </label>
                                    <input type="text" value="{{ livraison.get_type_commande_display }}" readonly 
                                           class="w-full px-4 py-3 border border-gray-300 rounded-lg bg-gray-50 text-gray-700">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">
                                        Commande
                                    </label>
                                    <input type="text" value="{{ livraison.numero_commande }}" readonly 
                                           class="w-full px-4 py-3 border border-gray-300 rounded-lg bg-gray-50 text-gray-700">
                                </div>
                            </div>
                            <div class="mt-4">
                                <label class="block text-sm font-medium text-gray-700 mb-2">
                                    Fournisseur
                                </label>
                                <input type="text" value="{{ livraison.fournisseur.nom }}" readonly 
                                       class="w-full px-4 py-3 border border-gray-300 rounded-lg bg-gray-50 text-gray-700">
                            </div>
                        {% else %}
                            <!-- Mode création : sélection interactive -->
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <!-- Type de commande -->
                                <div>
                                    <label for="{{ form.type_commande.id_for_label }}" class="block text-sm font-medium text-gray-700 mb-2">
                                        Type de commande *
                                    </label>
                                    {{ form.type_commande }}
                                    {% if form.type_commande.errors %}
                                        <p class="text-red-600 text-sm mt-1">{{ form.type_commande.errors.0 }}</p>
                                    {% endif %}
                                </div>

                                <!-- Commande -->
                                <div>
                                    <label for="commande-select-display" class="block text-sm font-medium text-gray-700 mb-2">
                                        Commande *
                                    </label>
                                    <select id="commande-select-display" class="form-control">
                                        <option value="">Sélectionner une commande</option>
                                    </select>
                                    {{ form.commande_id }}
                                    {% if form.commande_id.errors %}
                                        <p class="text-red-600 text-sm mt-1">{{ form.commande_id.errors.0 }}</p>
                                    {% endif %}
                                </div>
                            </div>

                            <!-- Fournisseur (automatique) -->
                            <div class="mt-4">
                                <label class="block text-sm font-medium text-gray-700 mb-2">
                                    Fournisseur
                                </label>
                                <input type="text" id="fournisseur-display" readonly 
                                       class="w-full px-4 py-3 border border-gray-300 rounded-lg bg-gray-50 text-gray-700 form-control"
                                       placeholder="Sélectionnez une commande pour voir le fournisseur">
                            </div>
                        {% endif %}
                    </div>

                    <!-- Section 1.5: Matériels de la commande -->
                    <div id="materiels-section" class="hidden form-section">
                        <h3 class="flex items-center gap-2">
                            <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                            </svg>
                            Matériels de la commande
                        </h3>
                        
                        <div id="materiels-list" class="space-y-3">
                            <!-- Les matériels seront affichés ici dynamiquement -->
                        </div>
                    </div>

                    <!-- Section 2: Informations de livraison -->
                    <div class="form-section">
                        <h3 class="flex items-center gap-2">
                            <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
                            </svg>
                            Informations de livraison
                        </h3>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <!-- Date de livraison prévue -->
                            <div>
                                <label for="{{ form.date_livraison_prevue.id_for_label }}" class="block text-sm font-medium text-gray-700 mb-2">
                                    Date de livraison prévue *
                                </label>
                                {{ form.date_livraison_prevue }}
                                {% if form.date_livraison_prevue.errors %}
                                    <p class="text-red-600 text-sm mt-1">{{ form.date_livraison_prevue.errors.0 }}</p>
                                {% endif %}
                            </div>

                            <!-- Date de livraison effective -->
                            <div>
                                <label for="{{ form.date_livraison_effective.id_for_label }}" class="block text-sm font-medium text-gray-700 mb-2">
                                    Date de livraison effective
                                </label>
                                {{ form.date_livraison_effective }}
                                {% if form.date_livraison_effective.errors %}
                                    <p class="text-red-600 text-sm mt-1">{{ form.date_livraison_effective.errors.0 }}</p>
                                {% endif %}
                            </div>

                            <!-- Statut de livraison -->
                            <div>
                                <label for="{{ form.statut_livraison.id_for_label }}" class="block text-sm font-medium text-gray-700 mb-2">
                                    Statut de livraison
                                </label>
                                {{ form.statut_livraison }}
                                {% if form.statut_livraison.errors %}
                                    <p class="text-red-600 text-sm mt-1">{{ form.statut_livraison.errors.0 }}</p>
                                {% endif %}
                            </div>
                        </div>
                    </div>

                    <!-- Section 3: Conformité et réception -->
                    <div class="form-section">
                        <h3 class="flex items-center gap-2">
                            <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            Conformité et réception
                        </h3>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <!-- Conforme -->
                            <div class="flex items-center p-4 bg-white rounded-lg border border-gray-200">
                                {{ form.conforme }}
                                <label for="{{ form.conforme.id_for_label }}" class="ml-3 text-sm font-medium text-gray-700">
                                    Conforme
                                </label>
                            </div>

                            <!-- PV réception validé -->
                            <div class="flex items-center p-4 bg-white rounded-lg border border-gray-200">
                                {{ form.pv_reception_recu }}
                                <label for="{{ form.pv_reception_recu.id_for_label }}" class="ml-3 text-sm font-medium text-gray-700">
                                    PV réception validé
                                </label>
                            </div>
                        </div>
                    </div>

                    <!-- Section 4: Notes -->
                    <div class="form-section">
                        <h3 class="flex items-center gap-2">
                            <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                            </svg>
                            Notes et commentaires
                        </h3>
                        
                        <div>
                            {{ form.notes }}
                            {% if form.notes.errors %}
                                <p class="text-red-600 text-sm mt-1">{{ form.notes.errors.0 }}</p>
                            {% endif %}
                        </div>
                    </div>

                    <!-- Boutons d'action -->
                    <div class="flex justify-end space-x-4 pt-6 border-t border-gray-200">
                        <button type="button" onclick="window.history.back()" 
                                class="btn-secondary text-white font-semibold py-3 px-6 rounded-xl">
                            Annuler
                        </button>
                        <button type="submit" 
                                class="btn-primary text-white font-semibold py-3 px-6 rounded-xl flex items-center gap-2">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                            </svg>
                            {% if is_edit %}
                                Mettre à jour la livraison
                            {% else %}
                                Enregistrer la livraison
                            {% endif %}
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        function livraisonForm() {
            return {
                init() {
                    this.setupEventListeners();
                    
                    // En mode édition, charger automatiquement les données de la commande
                    {% if is_edit %}
                    this.loadEditModeData();
                    {% endif %}
                },
                
                setupEventListeners() {
                    const typeCommandeSelect = document.getElementById('type-commande');
                    const commandeSelectDisplay = document.getElementById('commande-select-display');
                    const commandeSelectHidden = document.getElementById('commande-select');
                    
                    if (typeCommandeSelect) {
                        typeCommandeSelect.addEventListener('change', () => {
                            this.loadCommandes();
                        });
                    }
                    
                    if (commandeSelectDisplay) {
                        commandeSelectDisplay.addEventListener('change', () => {
                            // Synchroniser avec le champ caché
                            commandeSelectHidden.value = commandeSelectDisplay.value;
                            this.loadCommandeDetails();
                        });
                    }
                },
                
                async loadCommandes() {
                    const typeCommande = document.getElementById('type-commande').value;
                    const commandeSelectDisplay = document.getElementById('commande-select-display');
                    const commandeSelectHidden = document.getElementById('commande-select');
                    
                    console.log('Chargement des commandes pour le type:', typeCommande);
                    
                    if (!typeCommande) {
                        commandeSelectDisplay.innerHTML = '<option value="">Sélectionner une commande</option>';
                        commandeSelectHidden.value = '';
                        return;
                    }
                    
                    try {
                        const url = `{% url 'livraison:api_commandes' %}?type=${typeCommande}`;
                        console.log('URL de l\'API:', url);
                        
                        const response = await fetch(url);
                        const data = await response.json();
                        
                        console.log('Données reçues:', data);
                        
                        commandeSelectDisplay.innerHTML = '<option value="">Sélectionner une commande</option>';
                        data.commandes.forEach(commande => {
                            const option = document.createElement('option');
                            option.value = commande.id;
                            option.textContent = commande.numero_commande;
                            commandeSelectDisplay.appendChild(option);
                        });
                        commandeSelectHidden.value = '';
                    } catch (error) {
                        console.error('Erreur lors du chargement des commandes:', error);
                    }
                },
                
                async loadCommandeDetails() {
                    const commandeId = document.getElementById('commande-select').value;
                    const typeCommande = document.getElementById('type-commande').value;
                    
                    console.log('Chargement des détails pour commande:', commandeId, 'type:', typeCommande);
                    
                    if (!commandeId || !typeCommande) {
                        this.clearCommandeInfo();
                        return;
                    }
                    
                    try {
                        const url = `{% url 'livraison:api_commande_details' 0 %}`.replace('0', commandeId) + `?type=${typeCommande}`;
                        console.log('URL de l\'API détails:', url);
                        
                        const response = await fetch(url);
                        const data = await response.json();
                        
                        console.log('Données détails reçues:', data);
                        
                        // Afficher le fournisseur dans le champ dédié
                        document.getElementById('fournisseur-display').value = data.fournisseur || '';
                        
                        // Afficher les matériels
                        this.displayMateriels(data.materiels || []);
                        
                    } catch (error) {
                        console.error('Erreur lors du chargement des détails de la commande:', error);
                    }
                },
                
                displayMateriels(materiels) {
                    const materielsSection = document.getElementById('materiels-section');
                    const materielsList = document.getElementById('materiels-list');
                    
                    if (materiels.length === 0) {
                        materielsSection.classList.add('hidden');
                        return;
                    }
                    
                    materielsSection.classList.remove('hidden');
                    materielsList.innerHTML = '';
                    
                    materiels.forEach(materiel => {
                        const materielDiv = document.createElement('div');
                        materielDiv.className = 'materiel-card';
                        materielDiv.innerHTML = `
                            <div class="flex justify-between items-start">
                                <div class="flex-1">
                                    <div class="font-semibold text-gray-900 text-lg mb-1">${materiel.designation}</div>
                                    ${materiel.description ? `<div class="text-sm text-gray-600 mb-2">${materiel.description}</div>` : ''}
                                    <div class="flex items-center gap-4 text-sm text-gray-500">
                                        <span class="flex items-center gap-1">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
                                            </svg>
                                            Quantité: ${materiel.quantite}
                                        </span>
                                        <span class="flex items-center gap-1">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                                            </svg>
                                            Prix unitaire: ${materiel.prix_unitaire} DH
                                        </span>
                                    </div>
                                </div>
                                <div class="text-right ml-4">
                                    <div class="text-lg font-bold text-blue-600">${materiel.prix_total} DH</div>
                                    <div class="text-xs text-gray-500">Total</div>
                                </div>
                            </div>
                        `;
                        materielsList.appendChild(materielDiv);
                    });
                },
                
                clearCommandeInfo() {
                    document.getElementById('fournisseur-display').value = '';
                    document.getElementById('materiels-section').classList.add('hidden');
                },
                
                loadEditModeData() {
                    // En mode édition, afficher les matériels de la livraison existante
                    {% if is_edit and materiels %}
                    const materiels = [
                        {% for materiel in materiels %}
                        {
                            designation: '{{ materiel.designation.nom }}',
                            description: '{{ materiel.description.nom|default:"" }}',
                            quantite: {{ materiel.quantite }},
                            prix_unitaire: '{{ materiel.prix_unitaire }}',
                            prix_total: '{{ materiel.total }}'
                        },
                        {% endfor %}
                    ];
                    this.displayMateriels(materiels);
                    {% endif %}
                }
            }
        }
    </script></body>
</html> 