version: '3.8'

services:
  # Base de données PostgreSQL (désactivée - utilisation de la base locale)
  # db:
  #   image: pgvector/pgvector:pg15
  #   environment:
  #     POSTGRES_DB: parcinfo_db
  #     POSTGRES_USER: Houda
  #     POSTGRES_PASSWORD: "houda123"
  #     POSTGRES_INITDB_ARGS: "--auth-host=trust --auth-local=trust"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U Houda -d parcinfo_db"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Backend Django
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    env_file:
      - env.docker
    ports:
      - "8000:8000"
    # depends_on:
    #   db:
    #     condition: service_healthy
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    restart: unless-stopped

  # Frontend React
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

  # Service Chatbot
  chatbot:
    build:
      context: .
      dockerfile: Dockerfile.chatbot
    env_file:
      - env.docker
    ports:
      - "8001:8001"
    # depends_on:
    #   db:
    #     condition: service_healthy
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface
    restart: unless-stopped

  # Service Streamlit Dashboard
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    env_file:
      - env.docker
    ports:
      - "8501:8501"
    # depends_on:
    #   db:
    #     condition: service_healthy
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

  # Nginx (reverse proxy)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  # postgres_data:  # Désactivé - utilisation de la base locale
  static_volume:
  media_volume:
