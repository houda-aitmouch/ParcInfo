# Dockerfile optimis√© pour Azure App Service
FROM python:3.11-slim

# Variables d'environnement Azure
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive
ENV WEBSITE_SITE_NAME=parcinfo
ENV WEBSITE_SKIP_CONTENTSHARE_VALIDATION=1

# Installation des d√©pendances syst√®me
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    gettext \
    curl \
    && rm -rf /var/lib/apt/lists/*

# R√©pertoire de travail
WORKDIR /home/site/wwwroot

# Copie des requirements Azure
COPY azure-requirements.txt /home/site/wwwroot/

# Installation des d√©pendances Python
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r azure-requirements.txt

# Copie du code source
COPY . /home/site/wwwroot/

# Cr√©ation des r√©pertoires Azure
RUN mkdir -p /home/site/wwwroot/staticfiles /home/site/wwwroot/media

# Collecte des fichiers statiques
RUN python manage.py collectstatic --noinput --settings=ParcInfo.settings

# Script de d√©marrage Azure
RUN echo '#!/bin/bash\n\
echo "üöÄ D√©marrage ParcInfo sur Azure..."\n\
python manage.py migrate --settings=ParcInfo.settings\n\
python manage.py shell --settings=ParcInfo.settings << EOF\n\
from django.contrib.auth import get_user_model\n\
User = get_user_model()\n\
if not User.objects.filter(username="admin").exists():\n\
    User.objects.create_superuser("admin", "admin@parcinfo.com", "admin123")\n\
    print("Superutilisateur admin cr√©√©")\n\
EOF\n\
gunicorn ParcInfo.wsgi:application --bind 0.0.0.0:8000 --workers 2 --timeout 30\n\
' > /home/site/wwwroot/startup.sh && chmod +x /home/site/wwwroot/startup.sh

# Exposition du port
EXPOSE 8000

# Commande de d√©marrage
CMD ["/home/site/wwwroot/startup.sh"]
