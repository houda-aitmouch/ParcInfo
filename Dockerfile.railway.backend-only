# Dockerfile Railway - Backend seul (sans chatbot) - Image < 4GB
FROM python:3.11-slim as builder

# Variables d'environnement
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Installation des dépendances système pour build
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    gettext \
    && rm -rf /var/lib/apt/lists/*

# Répertoire de travail
WORKDIR /app

# Copie des requirements
COPY requirements.txt /app/

# Installation des dépendances Python (sans modèles IA)
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Stage de production
FROM python:3.11-slim as production

# Variables d'environnement
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive

# Installation des dépendances système minimales
RUN apt-get update && apt-get install -y \
    libpq-dev \
    gettext \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && apt-get autoremove -y

# Copie des packages Python depuis le builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Répertoire de travail
WORKDIR /app

# Copie du code source
COPY . /app/

# Création des répertoires nécessaires
RUN mkdir -p /app/staticfiles /app/media

# Collecte des fichiers statiques
RUN python manage.py collectstatic --noinput --settings=ParcInfo.settings

# Script de démarrage
COPY railway-start-backend-only.sh /app/railway-start-backend-only.sh
RUN chmod +x /app/railway-start-backend-only.sh

# Nettoyage
RUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.cache/* \
    /usr/share/doc/* /usr/share/man/* /usr/share/locale/* \
    /var/log/* /var/cache/*

# Exposition du port
EXPOSE 8000

# Commande de démarrage
CMD ["/app/railway-start-backend-only.sh"]
