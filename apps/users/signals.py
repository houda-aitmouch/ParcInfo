from django.db.models.signals import post_save
from django.dispatch import receiver
from django.utils import timezone
from .models import NotificationDemande

@receiver(post_save, sender='demande_equipement.DemandeEquipement')
def creer_notification_demande(sender, instance, created, **kwargs):
    """
    Cr√©e une notification automatique pour les employ√©s quand le statut d'une demande change
    """
    if not created:  # Seulement si c'est une mise √† jour
        try:
            # V√©rifier si le statut a chang√©
            if hasattr(instance, 'tracker') and instance.tracker.has_changed('statut'):
                # Cr√©er la notification
                titre = f"Demande {instance.numero_demande} - {instance.get_statut_display()}"
                
                # Messages personnalis√©s selon le statut - plus d√©taill√©s pour les employ√©s
                messages = {
                    'en_attente': f"Votre demande {instance.numero_demande} est en attente de validation par la hi√©rarchie.",
                    'approuvee': f"üéâ Votre demande {instance.numero_demande} a √©t√© approuv√©e ! L'√©quipement sera command√© prochainement.",
                    'rejetee': f"‚ùå Votre demande {instance.numero_demande} a √©t√© rejet√©e. Contactez votre responsable pour plus de d√©tails.",
                    'en_cours': f"üîÑ Votre demande {instance.numero_demande} est en cours de traitement. Nous vous tiendrons inform√©.",
                    'terminee': f"‚úÖ Votre demande {instance.numero_demande} a √©t√© trait√©e avec succ√®s. L'√©quipement est disponible.",
                    'en_attente_signature': f"‚úçÔ∏è Votre demande {instance.numero_demande} n√©cessite votre signature pour validation.",
                    'signature_requise': f"‚úçÔ∏è Signature requise pour votre demande {instance.numero_demande}. Veuillez la signer rapidement.",
                }
                
                message = messages.get(instance.statut, f"Le statut de votre demande {instance.numero_demande} a chang√©.")
                
                # Cr√©er la notification
                NotificationDemande.objects.create(
                    utilisateur=instance.demandeur,
                    type_notification='demande_equipement',
                    titre=titre,
                    message=message,
                    statut_demande=instance.statut,
                    demande_id=instance.id
                )
                
        except Exception as e:
            # Logger l'erreur mais ne pas faire √©chouer le signal
            import logging
            logger = logging.getLogger(__name__)
            logger.error(f"Erreur lors de la cr√©ation de la notification: {e}")

# Signal pour les demandes n√©cessitant une signature
@receiver(post_save, sender='demande_equipement.DemandeEquipement')
def creer_notification_signature(sender, instance, created, **kwargs):
    """
    Cr√©e une notification sp√©ciale quand une demande n√©cessite une signature
    """
    if not created:
        try:
            # V√©rifier si la demande n√©cessite une signature
            if hasattr(instance, 'signature_requise') and instance.signature_requise:
                # V√©rifier si on n'a pas d√©j√† cr√©√© une notification pour ce statut
                if not NotificationDemande.objects.filter(
                    utilisateur=instance.demandeur,
                    demande_id=instance.id,
                    statut_demande='signature_requise'
                ).exists():
                    
                    titre = f"‚úçÔ∏è Signature requise - Demande {instance.numero_demande}"
                    message = f"Votre demande {instance.numero_demande} n√©cessite votre signature pour √™tre trait√©e. Veuillez la signer rapidement."
                    
                    NotificationDemande.objects.create(
                        utilisateur=instance.demandeur,
                        type_notification='demande_equipement',
                        titre=titre,
                        message=message,
                        statut_demande='signature_requise',
                        demande_id=instance.id
                    )
                    
        except Exception as e:
            import logging
            logger = logging.getLogger(__name__)
            logger.error(f"Erreur lors de la cr√©ation de la notification de signature: {e}")

# Suppression des notifications pour les commandes - les employ√©s ne doivent recevoir que des notifications pour leurs demandes
