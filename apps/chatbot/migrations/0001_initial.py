# Generated by Django 4.2.7 on 2025-08-04 19:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pgvector.django


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("response", models.TextField()),
                ("session_id", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VectorSearchLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("query", models.TextField()),
                ("results_count", models.IntegerField()),
                (
                    "search_time",
                    models.FloatField(help_text="Temps de recherche en secondes"),
                ),
                ("session_id", models.CharField(blank=True, max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "chatbot_vector_search_logs",
                "indexes": [
                    models.Index(
                        fields=["timestamp"], name="chatbot_vec_timesta_109208_idx"
                    ),
                    models.Index(
                        fields=["user"], name="chatbot_vec_user_id_2ff864_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DocumentVector",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("content", models.TextField(help_text="Contenu textuel indexé")),
                ("embedding", pgvector.django.VectorField(dimensions=384)),
                ("model_name", models.CharField(max_length=100)),
                ("app_label", models.CharField(max_length=100)),
                ("indexed_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "priority",
                    models.IntegerField(
                        default=1, help_text="Priorité pour le ranking"
                    ),
                ),
                ("source", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="chatbot_doc_content_74db48_idx",
                    ),
                    models.Index(
                        fields=["model_name", "app_label"],
                        name="chatbot_doc_model_n_8588a7_idx",
                    ),
                    models.Index(
                        fields=["is_active", "priority"],
                        name="chatbot_doc_is_acti_3876b2_idx",
                    ),
                    models.Index(
                        fields=["indexed_at"], name="chatbot_doc_indexed_d7dda2_idx"
                    ),
                ],
                "unique_together": {("content_type", "object_id")},
            },
        ),
    ]
